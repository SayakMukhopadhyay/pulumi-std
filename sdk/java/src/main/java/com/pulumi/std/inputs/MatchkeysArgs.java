// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class MatchkeysArgs extends com.pulumi.resources.InvokeArgs {

    public static final MatchkeysArgs Empty = new MatchkeysArgs();

    @Import(name="searchList", required=true)
    private Output<List<String>> searchList;

    public Output<List<String>> searchList() {
        return this.searchList;
    }

    @Import(name="values", required=true)
    private Output<List<String>> values;

    public Output<List<String>> values() {
        return this.values;
    }

    private MatchkeysArgs() {}

    private MatchkeysArgs(MatchkeysArgs $) {
        this.searchList = $.searchList;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MatchkeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MatchkeysArgs $;

        public Builder() {
            $ = new MatchkeysArgs();
        }

        public Builder(MatchkeysArgs defaults) {
            $ = new MatchkeysArgs(Objects.requireNonNull(defaults));
        }

        public Builder searchList(Output<List<String>> searchList) {
            $.searchList = searchList;
            return this;
        }

        public Builder searchList(List<String> searchList) {
            return searchList(Output.of(searchList));
        }

        public Builder searchList(String... searchList) {
            return searchList(List.of(searchList));
        }

        public Builder values(Output<List<String>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public MatchkeysArgs build() {
            $.searchList = Objects.requireNonNull($.searchList, "expected parameter 'searchList' to be non-null");
            $.values = Objects.requireNonNull($.values, "expected parameter 'values' to be non-null");
            return $;
        }
    }

}
