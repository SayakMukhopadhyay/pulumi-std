// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SplitArgs extends com.pulumi.resources.InvokeArgs {

    public static final SplitArgs Empty = new SplitArgs();

    @Import(name="separator", required=true)
    private Output<String> separator;

    public Output<String> separator() {
        return this.separator;
    }

    @Import(name="text", required=true)
    private Output<String> text;

    public Output<String> text() {
        return this.text;
    }

    private SplitArgs() {}

    private SplitArgs(SplitArgs $) {
        this.separator = $.separator;
        this.text = $.text;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SplitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SplitArgs $;

        public Builder() {
            $ = new SplitArgs();
        }

        public Builder(SplitArgs defaults) {
            $ = new SplitArgs(Objects.requireNonNull(defaults));
        }

        public Builder separator(Output<String> separator) {
            $.separator = separator;
            return this;
        }

        public Builder separator(String separator) {
            return separator(Output.of(separator));
        }

        public Builder text(Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public SplitArgs build() {
            $.separator = Objects.requireNonNull($.separator, "expected parameter 'separator' to be non-null");
            $.text = Objects.requireNonNull($.text, "expected parameter 'text' to be non-null");
            return $;
        }
    }

}
