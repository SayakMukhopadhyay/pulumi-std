// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.std.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


public final class LogArgs extends com.pulumi.resources.InvokeArgs {

    public static final LogArgs Empty = new LogArgs();

    @Import(name="base", required=true)
    private Output<Double> base;

    public Output<Double> base() {
        return this.base;
    }

    @Import(name="input", required=true)
    private Output<Double> input;

    public Output<Double> input() {
        return this.input;
    }

    private LogArgs() {}

    private LogArgs(LogArgs $) {
        this.base = $.base;
        this.input = $.input;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogArgs $;

        public Builder() {
            $ = new LogArgs();
        }

        public Builder(LogArgs defaults) {
            $ = new LogArgs(Objects.requireNonNull(defaults));
        }

        public Builder base(Output<Double> base) {
            $.base = base;
            return this;
        }

        public Builder base(Double base) {
            return base(Output.of(base));
        }

        public Builder input(Output<Double> input) {
            $.input = input;
            return this;
        }

        public Builder input(Double input) {
            return input(Output.of(input));
        }

        public LogArgs build() {
            $.base = Objects.requireNonNull($.base, "expected parameter 'base' to be non-null");
            $.input = Objects.requireNonNull($.input, "expected parameter 'input' to be non-null");
            return $;
        }
    }

}
