// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns the last element of the input path.
 */
export function basename(args: BasenameArgs, opts?: pulumi.InvokeOptions): Promise<BasenameResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("std:index:basename", {
        "input": args.input,
    }, opts);
}

export interface BasenameArgs {
    input: string;
}

export interface BasenameResult {
    readonly result: string;
}

export function basenameOutput(args: BasenameOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<BasenameResult> {
    return pulumi.output(args).apply(a => basename(a, opts))
}

export interface BasenameOutputArgs {
    input: pulumi.Input<string>;
}
