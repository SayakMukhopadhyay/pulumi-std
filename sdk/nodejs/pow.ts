// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns the base input raised to the power of the exponent.
 */
export function pow(args: PowArgs, opts?: pulumi.InvokeOptions): Promise<PowResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("std:index:pow", {
        "base": args.base,
        "exponent": args.exponent,
    }, opts);
}

export interface PowArgs {
    base: number;
    exponent: number;
}

export interface PowResult {
    readonly result: number;
}

export function powOutput(args: PowOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<PowResult> {
    return pulumi.output(args).apply(a => pow(a, opts))
}

export interface PowOutputArgs {
    base: pulumi.Input<number>;
    exponent: pulumi.Input<number>;
}
