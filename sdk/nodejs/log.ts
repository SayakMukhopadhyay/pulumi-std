// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns the greatest integer value less than or equal to the argument.
 */
export function log(args: LogArgs, opts?: pulumi.InvokeOptions): Promise<LogResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("std:index:log", {
        "base": args.base,
        "input": args.input,
    }, opts);
}

export interface LogArgs {
    base: number;
    input: number;
}

export interface LogResult {
    readonly result: number;
}

export function logOutput(args: LogOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LogResult> {
    return pulumi.output(args).apply(a => log(a, opts))
}

export interface LogOutputArgs {
    base: pulumi.Input<number>;
    input: pulumi.Input<number>;
}
