// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Removes empty string elements from a list.
 */
export function compact(args: CompactArgs, opts?: pulumi.InvokeOptions): Promise<CompactResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("std:index:compact", {
        "input": args.input,
    }, opts);
}

export interface CompactArgs {
    input: string[];
}

export interface CompactResult {
    readonly result: string[];
}

export function compactOutput(args: CompactOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<CompactResult> {
    return pulumi.output(args).apply(a => compact(a, opts))
}

export interface CompactOutputArgs {
    input: pulumi.Input<pulumi.Input<string>[]>;
}
