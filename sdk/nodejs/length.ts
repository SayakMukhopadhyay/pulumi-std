// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Returns a JSON-encoded representation of the given value, which can contain arbitrarily-nested lists and maps. Note that if the value is a string then its value will be placed in quotes.
 */
export function length(args: LengthArgs, opts?: pulumi.InvokeOptions): Promise<LengthResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("std:index:length", {
        "input": args.input,
    }, opts);
}

export interface LengthArgs {
    input: any;
}

export interface LengthResult {
    readonly result: number;
}

export function lengthOutput(args: LengthOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<LengthResult> {
    return pulumi.output(args).apply(a => length(a, opts))
}

export interface LengthOutputArgs {
    input: any;
}
